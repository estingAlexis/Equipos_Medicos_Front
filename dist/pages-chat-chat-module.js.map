{"version":3,"sources":["webpack:///./src/app/pages/chat/chat.component.html","webpack:///./src/app/pages/chat/chat.component.scss","webpack:///./src/app/pages/chat/chat.component.ts","webpack:///./src/app/pages/chat/chat.model.ts","webpack:///./src/app/pages/chat/chat.module.ts","webpack:///./src/app/pages/chat/chat.service.ts"],"names":[],"mappings":"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","file":"pages-chat-chat-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"row wrap\\\">\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\n        <mat-card class=\\\"p-0 chat\\\">\\n            <mat-sidenav-container>\\n              <mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" class=\\\"chat-sidenav mat-elevation-z1\\\">\\n                  <mat-toolbar color=\\\"primary\\\" class=\\\"p-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                      <mat-list class=\\\"p-0\\\">\\n                          <mat-list-item>\\n                              <img matListAvatar [src]=\\\"userImage\\\">\\n                          </mat-list-item>\\n                      </mat-list>\\n                      <button mat-icon-button [matMenuTriggerFor]=\\\"userMenu\\\" #userMenuTrigger=\\\"matMenuTrigger\\\">\\n                          <mat-icon>more_vert</mat-icon>\\n                      </button>                                     \\n                  </mat-toolbar>\\n                  <mat-menu #userMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" overlapTrigger=\\\"true\\\">\\n                      <span (mouseleave)=\\\"userMenuTrigger.closeMenu()\\\">\\n                          <button mat-menu-item>\\n                              <mat-icon>account_circle</mat-icon>\\n                              <span>Profile</span>\\n                          </button>\\n                          <button mat-menu-item>\\n                              <mat-icon>settings</mat-icon>\\n                              <span>Settings</span>\\n                          </button>\\n                          <a mat-menu-item routerLink=\\\"/\\\"> \\n                              <mat-icon>power_settings_new</mat-icon>\\n                              <span>Exit chat</span>\\n                          </a>\\n                      </span>\\n                  </mat-menu> \\n                  <mat-nav-list class=\\\"p-0 chat-sidenav-list\\\" perfectScrollbar>\\n                      <mat-list-item *ngFor=\\\"let chat of chats\\\" (click)=\\\"getChat(chat)\\\">\\n                          <img matListAvatar [src]=\\\"chat.image\\\">\\n                          <h6 matLine> {{chat.author}} </h6>\\n                          <p matLine fxLayout=\\\"row\\\" fxLayoutAlign=\\\"none center\\\" class=\\\"muted-text\\\">\\n                              <span [ngSwitch]=\\\"chat.authorStatus\\\">\\n                                  <mat-icon *ngSwitchCase=\\\"'Online'\\\" class=\\\"chat-status-icon\\\">check_circle</mat-icon>\\n                                  <mat-icon *ngSwitchCase=\\\"'Offline'\\\" class=\\\"chat-status-icon\\\">highlight_off</mat-icon>\\n                                  <mat-icon *ngSwitchCase=\\\"'Away'\\\" class=\\\"chat-status-icon\\\">schedule</mat-icon>\\n                                  <mat-icon *ngSwitchCase=\\\"'Do not disturb'\\\" class=\\\"chat-status-icon\\\">not_interested</mat-icon>\\n                              </span>\\n                              <span class=\\\"author-status\\\">{{chat.authorStatus}}</span>\\n                          </p>\\n                      </mat-list-item>\\n                  </mat-nav-list>\\n              </mat-sidenav>\\n            \\n              <div>\\n                  <mat-toolbar color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                          <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n                              <mat-icon>list</mat-icon>\\n                          </button>\\n                          <mat-list *ngIf=\\\"currentChat\\\" class=\\\"p-0\\\">\\n                              <mat-list-item>\\n                                  <img matListAvatar [src]=\\\"currentChat.image\\\">\\n                              </mat-list-item>\\n                          </mat-list>\\n                          <span *ngIf=\\\"currentChat\\\" class=\\\"author-name\\\">{{currentChat.author}}</span>\\n                      </div>\\n                      <button mat-icon-button [matMenuTriggerFor]=\\\"personMenu\\\" #personMenuTrigger=\\\"matMenuTrigger\\\">\\n                          <mat-icon>more_vert</mat-icon>\\n                      </button> \\n                  </mat-toolbar>\\n                  <mat-menu #personMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" overlapTrigger=\\\"true\\\">\\n                      <span (mouseleave)=\\\"personMenuTrigger.closeMenu()\\\">\\n                          <button mat-menu-item>\\n                              <mat-icon>account_circle</mat-icon>\\n                              <span>Contact info</span>\\n                          </button>\\n                          <button mat-menu-item>\\n                              <mat-icon>volume_mute</mat-icon>\\n                              <span>Mute</span>\\n                          </button>\\n                          <button mat-menu-item> \\n                              <mat-icon>delete_forever</mat-icon>\\n                              <span>Clear chat</span>\\n                          </button>\\n                      </span>\\n                  </mat-menu> \\n                  <div class=\\\"chat-content\\\" perfectScrollbar>\\n                      <mat-list *ngIf=\\\"talks\\\" class=\\\"p-0\\\" >\\n                          <mat-list-item *ngFor=\\\"let talk of talks\\\" class=\\\"talk-item\\\">\\n                              <img matListAvatar [src]=\\\"talk.image\\\">\\n                              <p matLine class=\\\"message\\\">\\n                                  <span [ngClass]=\\\"(talk.my) ? 'bg-primary' : 'bg-accent'\\\">{{talk.text}}</span>\\n                              </p>                             \\n                              <p matLine class=\\\"message-date\\\">\\n                                  <small>{{talk.date | date:\\\"dd MMMM, yyyy 'at' HH:mm\\\"}}</small>\\n                              </p> \\n                          </mat-list-item>\\n                      </mat-list>\\n                      <div *ngIf=\\\"!talks\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100 empty\\\">\\n                          <mat-icon>chat</mat-icon>            \\n                          <p>Select a interlocutor for talk</p>\\n                      </div> \\n                  </div>\\n                  <mat-divider></mat-divider>\\n                  <mat-card class=\\\"chat-actions\\\"> \\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                          <mat-form-field class=\\\"w-100\\\">\\n                            <input matInput placeholder=\\\"Enter your text...\\\" (keyup)=\\\"sendMessage($event)\\\" [(ngModel)]=\\\"newMessage\\\">\\n                          </mat-form-field>\\n                          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"scenter center\\\">\\n                              <button mat-icon-button type=\\\"button\\\">\\n                                  <mat-icon>attach_file</mat-icon>\\n                              </button>\\n                              <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"sendMessage($event)\\\">\\n                                  <mat-icon>send</mat-icon>\\n                              </button>\\n                          </div>\\n                        </div>\\n                  </mat-card>\\n              </div>\\n            \\n            </mat-sidenav-container>\\n        </mat-card>\\n      </div>\\n</div>\\n\"","module.exports = \".chat .chat-actions {\\n  padding: 12px; }\\n\\n.chat .author-name {\\n  font-size: 16px;\\n  font-weight: 400; }\\n\\n.chat .talk-item {\\n  padding: 6px 0;\\n  height: 100%; }\\n\\n.chat .message {\\n  white-space: unset;\\n  text-overflow: unset; }\\n\\n.chat .message span {\\n    padding: 6px 10px;\\n    border-radius: 4px;\\n    display: inline-block;\\n    font-size: 14px; }\\n\\n.chat .message-date {\\n  opacity: 0.8; }\\n\\n.chat .empty mat-icon {\\n  font-size: 220px;\\n  height: 220px;\\n  width: 220px;\\n  opacity: 0.4; }\\n\\n.chat .empty p {\\n  font-size: 18px;\\n  opacity: 0.8; }\\n\\n.chat-status-icon {\\n  font-size: 14px;\\n  height: 14px;\\n  width: 14px;\\n  line-height: 22px;\\n  margin-right: 6px; }\\n\\n.author-status {\\n  font-size: 13px; }\\n\\n.chat-sidenav {\\n  border-right: 1px solid transparent;\\n  overflow: hidden;\\n  width: 200px; }\\n\\n.chat-content {\\n  padding: 12px;\\n  height: calc(100vh - (56px + 8px*2 + 238px)); }\\n\\n.chat-sidenav-list {\\n  height: calc(100vh - (56px + 8px*2 + 134px)); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhc3psby9Eb2N1bWVudG9zL0dpdEh1Yi9FcXVpcG9zX01lZGljb3NfRnJvbnQvc3JjL2FwcC9wYWdlcy9jaGF0L2NoYXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFFUSxhQUFhLEVBQUE7O0FBRnJCO0VBS1EsZUFBZTtFQUNmLGdCQUFnQixFQUFBOztBQU54QjtFQVNRLGNBQWM7RUFDZCxZQUFZLEVBQUE7O0FBVnBCO0VBYVEsa0JBQWtCO0VBQ2xCLG9CQUFvQixFQUFBOztBQWQ1QjtJQWdCWSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixlQUFlLEVBQUE7O0FBbkIzQjtFQXVCUSxZQUFZLEVBQUE7O0FBdkJwQjtFQTJCWSxnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLFlBQVk7RUFDWixZQUFZLEVBQUE7O0FBOUJ4QjtFQWlDWSxlQUFlO0VBQ2YsWUFBWSxFQUFBOztBQUl4QjtFQUNJLGVBQWU7RUFDZixZQUFZO0VBQ1osV0FBVztFQUNYLGlCQUFpQjtFQUNqQixpQkFBaUIsRUFBQTs7QUFFckI7RUFDSSxlQUFlLEVBQUE7O0FBRW5CO0VBQ0ksbUNBQW1DO0VBQ25DLGdCQUFnQjtFQUNoQixZQUFZLEVBQUE7O0FBRWhCO0VBQ0ksYUFBYTtFQUNiLDRDQUF3RixFQUFBOztBQUU1RjtFQUNJLDRDQUF3RixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvY2hhdC9jaGF0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIi4uLy4uL3RoZW1lL3N0eWxlcy92YXJpYWJsZXNcIjtcblxuLmNoYXR7XG4gICAgLmNoYXQtYWN0aW9uc3tcbiAgICAgICAgcGFkZGluZzogMTJweDtcbiAgICB9XG4gICAgLmF1dGhvci1uYW1le1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgfVxuICAgIC50YWxrLWl0ZW17XG4gICAgICAgIHBhZGRpbmc6IDZweCAwO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxuICAgIC5tZXNzYWdle1xuICAgICAgICB3aGl0ZS1zcGFjZTogdW5zZXQ7XG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IHVuc2V0OyAgICAgICBcbiAgICAgICAgc3BhbntcbiAgICAgICAgICAgIHBhZGRpbmc6IDZweCAxMHB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC5tZXNzYWdlLWRhdGV7XG4gICAgICAgIG9wYWNpdHk6IDAuODtcbiAgICB9XG4gICAgLmVtcHR5e1xuICAgICAgICBtYXQtaWNvbntcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjIwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDIyMHB4O1xuICAgICAgICAgICAgd2lkdGg6IDIyMHB4O1xuICAgICAgICAgICAgb3BhY2l0eTogMC40O1xuICAgICAgICB9XG4gICAgICAgIHB7XG4gICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICAgIH1cbiAgICB9XG59XG4uY2hhdC1zdGF0dXMtaWNvbntcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgaGVpZ2h0OiAxNHB4O1xuICAgIHdpZHRoOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIG1hcmdpbi1yaWdodDogNnB4O1xufVxuLmF1dGhvci1zdGF0dXN7XG4gICAgZm9udC1zaXplOiAxM3B4O1xufVxuLmNoYXQtc2lkZW5hdntcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdpZHRoOiAyMDBweDsgICBcbn1cbi5jaGF0LWNvbnRlbnR7XG4gICAgcGFkZGluZzogMTJweDtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAoI3skdG9vbGJhci1oZWlnaHR9ICsgI3skaW5uZXItc2lkZW5hdi1jb250ZW50LXBhZGRpbmd9KjIgKyAyMzhweCkpO1xufVxuLmNoYXQtc2lkZW5hdi1saXN0IHtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAoI3skdG9vbGJhci1oZWlnaHR9ICsgI3skaW5uZXItc2lkZW5hdi1jb250ZW50LXBhZGRpbmd9KjIgKyAxMzRweCkpO1xufVxuIl19 */\"","import { Component, OnInit, HostListener, ViewChild } from '@angular/core';\nimport { AppSettings } from '../../app.settings';\nimport { Settings } from '../../app.settings.model';\nimport { Chat } from './chat.model';\nimport { ChatService } from './chat.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss'],\n  providers: [ ChatService ]\n})\nexport class ChatComponent implements OnInit {\n  @ViewChild('sidenav') sidenav: any;\n  public settings: Settings;\n  public userImage = 'assets/img/users/user.jpg';\n  public chats: Array<Chat>;\n  public talks: Array<Chat>;\n  public sidenavOpen:boolean = true;\n  public currentChat:Chat;\n  public newMessage:string;\n\n  constructor(public appSettings:AppSettings, private chatService:ChatService) { \n    this.settings = this.appSettings.settings; \n  }\n\n  ngOnInit() {\n    this.chats = this.chatService.getChats(); \n    if(window.innerWidth <= 768){\n      this.sidenavOpen = false;\n    }    \n  } \n\n  @HostListener('window:resize')\n  public onWindowResize():void {\n    (window.innerWidth <= 768) ? this.sidenavOpen = false : this.sidenavOpen = true;\n  }\n\n  public getChat(obj){\n    if(this.talks){\n       this.talks.length = 2;\n    }   \n    this.talks = this.chatService.getTalk();\n    this.talks.push(obj);\n    this.currentChat = obj;      \n    this.talks.forEach(talk => {\n      if(!talk.my){\n        talk.image = obj.image;\n      }\n    });\n    if(window.innerWidth <= 768){\n      this.sidenav.close();\n    }     \n  }\n\n  public sendMessage($event) {       \n    if (($event.which === 1 || $event.which === 13) && this.newMessage.trim() != '') {\n      if(this.talks){ \n        this.talks.push(\n            new Chat(\n              'assets/img/users/user.jpg', \n              'Emilio Verdines', \n              'online', \n              this.newMessage,\n              new Date(), \n              true)\n        )\n        this.newMessage = '';\n        let chatContainer = document.querySelector('.chat-content');\n        if(chatContainer){\n          setTimeout(() => {\n            var nodes = chatContainer.querySelectorAll('.mat-list-item');\n            let newChatTextHeight = nodes[nodes.length- 1];\n            chatContainer.scrollTop = chatContainer.scrollHeight + newChatTextHeight.clientHeight;\n          }); \n        }\n      }\n    }\n  }\n\n  public ngOnDestroy(){\n    if(this.talks)\n      this.talks.length = 2;\n  }\n\n}","export class Chat {\n    constructor(public image: string,\n                public author: string,\n                public authorStatus: string,\n                public text: string,\n                public date: Date,\n                public my: boolean) { }\n} ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ChatComponent } from './chat.component';\n\nexport const routes = [\n  { path: '', component: ChatComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    PerfectScrollbarModule,\n    SharedModule\n  ],\n  declarations: [\n    ChatComponent\n  ]\n})\nexport class ChatModule { }","import { Injectable } from '@angular/core'\nimport { Chat } from './chat.model';\n\nlet date = new Date(),\n    day = date.getDate(),\n    month = date.getMonth(),\n    year = date.getFullYear(),\n    hour = date.getHours(),\n    minute = date.getMinutes();\n\n// let chats = [\n//     new Chat(\n//         'assets/img/profile/ashley.jpg',\n//         'Ashley Ahlberg', \n//         'Online',\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\n//         new Date(year, month, day-2, hour, minute),\n//         false\n//     ),\n//     new Chat(\n//         'assets/img/profile/bruno.jpg',\n//         'Bruno Vespa',\n//         'Do not disturb',\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\n//         new Date(year, month, day-2, hour, minute),\n//         false\n//     ),\n//     new Chat(\n//         'assets/img/profile/julia.jpg',\n//         'Julia Aniston',\n//         'Away',\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\n//         new Date(year, month, day-2, hour, minute),\n//         false\n//     ),\n//     new Chat(\n//         'assets/img/profile/adam.jpg',\n//         'Adam Sandler',\n//         'Online',\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\n//         new Date(year, month, day-2, hour, minute),\n//         false\n//     ),\n//     new Chat(\n//         'assets/img/profile/tereza.jpg',\n//         'Tereza Stiles',\n//         'Offline',\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\n//         new Date(year, month, day-2, hour, minute),\n//         false\n//     ),  \n//     new Chat(\n//         'assets/img/profile/michael.jpg',\n//         'Michael Blair',\n//         'Online',\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\n//         new Date(year, month, day-2, hour, minute),\n//         false\n//     )\n// ]\n\nlet chats = [\n    new Chat(\n        'assets/img/profile/ashley.jpg',\n        'Ashley Ahlberg', \n        'Online',\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\n        new Date(year, month, day-2, hour, minute),\n        false\n    ),\n    new Chat(\n        'assets/img/profile/bruno.jpg',\n        'Bruno Vespa',\n        'Do not disturb',\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\n        new Date(year, month, day-2, hour, minute),\n        false\n    ),\n    new Chat(\n        'assets/img/profile/julia.jpg',\n        'Julia Aniston',\n        'Away',\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\n        new Date(year, month, day-2, hour, minute),\n        false\n    ),\n    new Chat(\n        'assets/img/profile/adam.jpg',\n        'Adam Sandler',\n        'Online',\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\n        new Date(year, month, day-2, hour, minute),\n        false\n    ),\n    new Chat(\n        'assets/img/profile/tereza.jpg',\n        'Tereza Stiles',\n        'Offline',\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\n        new Date(year, month, day-2, hour, minute),\n        false\n    ),  \n    new Chat(\n        'assets/img/profile/michael.jpg',\n        'Michael Blair',\n        'Online',\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\n        new Date(year, month, day-2, hour, minute),\n        false\n    )\n]\n\nlet talks = [\n    new Chat(\n        'assets/img/profile/ashley.jpg',\n        'Ashley Ahlberg', \n        'Online',\n        'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\n        new Date(year, month, day-2, hour, minute+3),\n        false\n    ),\n    new Chat(\n        'assets/img/users/user.jpg',\n        'Emilio Verdines', \n        'Online',\n        'Hi, Gradus is a fully compatible with angular material 2, responsive, organized folder structure, clean & customizable code, easy to use and much more...',\n        new Date(year, month, day-2, hour, minute+2),\n        true\n    )\n]\n\n@Injectable()\nexport class ChatService {\n\n    public getChats():Array<Chat> {\n        return chats;\n    }\n\n    public getTalk():Array<Chat> {\n        return talks;\n    }\n\n}\n\n"],"sourceRoot":""}